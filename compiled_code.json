{"contracts": {"SimpleStorage.sol": {"SimpleStorage": {"abi": [{"inputs": [{"internalType": "string", "name": "_name", "type": "string"}, {"internalType": "string", "name": "_symbol", "type": "string"}, {"internalType": "uint256", "name": "_totalSupply", "type": "uint256"}], "stateMutability": "nonpayable", "type": "constructor"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "account", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "Burn", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "account", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "Mint", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "from", "type": "address"}, {"indexed": true, "internalType": "address", "name": "to", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "value", "type": "uint256"}], "name": "Transfer", "type": "event"}, {"inputs": [{"internalType": "address", "name": "", "type": "address"}], "name": "balanceOf", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_account", "type": "address"}], "name": "ballanceOf", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_account", "type": "address"}, {"internalType": "uint256", "name": "_amount", "type": "uint256"}], "name": "burn", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_account", "type": "address"}, {"internalType": "int256", "name": "_amount", "type": "int256"}], "name": "mint", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "name", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "owner", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "symbol", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "totalSupply", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_to", "type": "address"}, {"internalType": "uint256", "name": "_value", "type": "uint256"}], "name": "transfer", "outputs": [{"internalType": "bool", "name": "success", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_from", "type": "address"}, {"internalType": "address", "name": "_to", "type": "address"}, {"internalType": "uint256", "name": "_value", "type": "uint256"}], "name": "transferFrom", "outputs": [{"internalType": "bool", "name": "success", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}], "evm": {"bytecode": {"generatedSources": [{"ast": {"nodeType": "YulBlock", "src": "0:3483:1", "statements": [{"body": {"nodeType": "YulBlock", "src": "102:258:1", "statements": [{"nodeType": "YulAssignment", "src": "112:74:1", "value": {"arguments": [{"arguments": [{"name": "length", "nodeType": "YulIdentifier", "src": "178:6:1"}], "functionName": {"name": "array_allocation_size_t_string_memory_ptr", "nodeType": "YulIdentifier", "src": "136:41:1"}, "nodeType": "YulFunctionCall", "src": "136:49:1"}], "functionName": {"name": "allocateMemory", "nodeType": "YulIdentifier", "src": "121:14:1"}, "nodeType": "YulFunctionCall", "src": "121:65:1"}, "variableNames": [{"name": "array", "nodeType": "YulIdentifier", "src": "112:5:1"}]}, {"expression": {"arguments": [{"name": "array", "nodeType": "YulIdentifier", "src": "202:5:1"}, {"name": "length", "nodeType": "YulIdentifier", "src": "209:6:1"}], "functionName": {"name": "mstore", "nodeType": "YulIdentifier", "src": "195:6:1"}, "nodeType": "YulFunctionCall", "src": "195:21:1"}, "nodeType": "YulExpressionStatement", "src": "195:21:1"}, {"nodeType": "YulVariableDeclaration", "src": "225:27:1", "value": {"arguments": [{"name": "array", "nodeType": "YulIdentifier", "src": "240:5:1"}, {"kind": "number", "nodeType": "YulLiteral", "src": "247:4:1", "type": "", "value": "0x20"}], "functionName": {"name": "add", "nodeType": "YulIdentifier", "src": "236:3:1"}, "nodeType": "YulFunctionCall", "src": "236:16:1"}, "variables": [{"name": "dst", "nodeType": "YulTypedName", "src": "229:3:1", "type": ""}]}, {"body": {"nodeType": "YulBlock", "src": "290:16:1", "statements": [{"expression": {"arguments": [{"kind": "number", "nodeType": "YulLiteral", "src": "299:1:1", "type": "", "value": "0"}, {"kind": "number", "nodeType": "YulLiteral", "src": "302:1:1", "type": "", "value": "0"}], "functionName": {"name": "revert", "nodeType": "YulIdentifier", "src": "292:6:1"}, "nodeType": "YulFunctionCall", "src": "292:12:1"}, "nodeType": "YulExpressionStatement", "src": "292:12:1"}]}, "condition": {"arguments": [{"arguments": [{"name": "src", "nodeType": "YulIdentifier", "src": "271:3:1"}, {"name": "length", "nodeType": "YulIdentifier", "src": "276:6:1"}], "functionName": {"name": "add", "nodeType": "YulIdentifier", "src": "267:3:1"}, "nodeType": "YulFunctionCall", "src": "267:16:1"}, {"name": "end", "nodeType": "YulIdentifier", "src": "285:3:1"}], "functionName": {"name": "gt", "nodeType": "YulIdentifier", "src": "264:2:1"}, "nodeType": "YulFunctionCall", "src": "264:25:1"}, "nodeType": "YulIf", "src": "261:2:1"}, {"expression": {"arguments": [{"name": "src", "nodeType": "YulIdentifier", "src": "337:3:1"}, {"name": "dst", "nodeType": "YulIdentifier", "src": "342:3:1"}, {"name": "length", "nodeType": "YulIdentifier", "src": "347:6:1"}], "functionName": {"name": "copy_memory_to_memory", "nodeType": "YulIdentifier", "src": "315:21:1"}, "nodeType": "YulFunctionCall", "src": "315:39:1"}, "nodeType": "YulExpressionStatement", "src": "315:39:1"}]}, "name": "abi_decode_available_length_t_string_memory_ptr_fromMemory", "nodeType": "YulFunctionDefinition", "parameters": [{"name": "src", "nodeType": "YulTypedName", "src": "75:3:1", "type": ""}, {"name": "length", "nodeType": "YulTypedName", "src": "80:6:1", "type": ""}, {"name": "end", "nodeType": "YulTypedName", "src": "88:3:1", "type": ""}], "returnVariables": [{"name": "array", "nodeType": "YulTypedName", "src": "96:5:1", "type": ""}], "src": "7:353:1"}, {"body": {"nodeType": "YulBlock", "src": "453:215:1", "statements": [{"body": {"nodeType": "YulBlock", "src": "502:16:1", "statements": [{"expression": {"arguments": [{"kind": "number", "nodeType": "YulLiteral", "src": "511:1:1", "type": "", "value": "0"}, {"kind": "number", "nodeType": "YulLiteral", "src": "514:1:1", "type": "", "value": "0"}], "functionName": {"name": "revert", "nodeType": "YulIdentifier", "src": "504:6:1"}, "nodeType": "YulFunctionCall", "src": "504:12:1"}, "nodeType": "YulExpressionStatement", "src": "504:12:1"}]}, "condition": {"arguments": [{"arguments": [{"arguments": [{"name": "offset", "nodeType": "YulIdentifier", "src": "481:6:1"}, {"kind": "number", "nodeType": "YulLiteral", "src": "489:4:1", "type": "", "value": "0x1f"}], "functionName": {"name": "add", "nodeType": "YulIdentifier", "src": "477:3:1"}, "nodeType": "YulFunctionCall", "src": "477:17:1"}, {"name": "end", "nodeType": "YulIdentifier", "src": "496:3:1"}], "functionName": {"name": "slt", "nodeType": "YulIdentifier", "src": "473:3:1"}, "nodeType": "YulFunctionCall", "src": "473:27:1"}], "functionName": {"name": "iszero", "nodeType": "YulIdentifier", "src": "466:6:1"}, "nodeType": "YulFunctionCall", "src": "466:35:1"}, "nodeType": "YulIf", "src": "463:2:1"}, {"nodeType": "YulVariableDeclaration", "src": "527:27:1", "value": {"arguments": [{"name": "offset", "nodeType": "YulIdentifier", "src": "547:6:1"}], "functionName": {"name": "mload", "nodeType": "YulIdentifier", "src": "541:5:1"}, "nodeType": "YulFunctionCall", "src": "541:13:1"}, "variables": [{"name": "length", "nodeType": "YulTypedName", "src": "531:6:1", "type": ""}]}, {"nodeType": "YulAssignment", "src": "563:99:1", "value": {"arguments": [{"arguments": [{"name": "offset", "nodeType": "YulIdentifier", "src": "635:6:1"}, {"kind": "number", "nodeType": "YulLiteral", "src": "643:4:1", "type": "", "value": "0x20"}], "functionName": {"name": "add", "nodeType": "YulIdentifier", "src": "631:3:1"}, "nodeType": "YulFunctionCall", "src": "631:17:1"}, {"name": "length", "nodeType": "YulIdentifier", "src": "650:6:1"}, {"name": "end", "nodeType": "YulIdentifier", "src": "658:3:1"}], "functionName": {"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory", "nodeType": "YulIdentifier", "src": "572:58:1"}, "nodeType": "YulFunctionCall", "src": "572:90:1"}, "variableNames": [{"name": "array", "nodeType": "YulIdentifier", "src": "563:5:1"}]}]}, "name": "abi_decode_t_string_memory_ptr_fromMemory", "nodeType": "YulFunctionDefinition", "parameters": [{"name": "offset", "nodeType": "YulTypedName", "src": "431:6:1", "type": ""}, {"name": "end", "nodeType": "YulTypedName", "src": "439:3:1", "type": ""}], "returnVariables": [{"name": "array", "nodeType": "YulTypedName", "src": "447:5:1", "type": ""}], "src": "380:288:1"}, {"body": {"nodeType": "YulBlock", "src": "737:80:1", "statements": [{"nodeType": "YulAssignment", "src": "747:22:1", "value": {"arguments": [{"name": "offset", "nodeType": "YulIdentifier", "src": "762:6:1"}], "functionName": {"name": "mload", "nodeType": "YulIdentifier", "src": "756:5:1"}, "nodeType": "YulFunctionCall", "src": "756:13:1"}, "variableNames": [{"name": "value", "nodeType": "YulIdentifier", "src": "747:5:1"}]}, {"expression": {"arguments": [{"name": "value", "nodeType": "YulIdentifier", "src": "805:5:1"}], "functionName": {"name": "validator_revert_t_uint256", "nodeType": "YulIdentifier", "src": "778:26:1"}, "nodeType": "YulFunctionCall", "src": "778:33:1"}, "nodeType": "YulExpressionStatement", "src": "778:33:1"}]}, "name": "abi_decode_t_uint256_fromMemory", "nodeType": "YulFunctionDefinition", "parameters": [{"name": "offset", "nodeType": "YulTypedName", "src": "715:6:1", "type": ""}, {"name": "end", "nodeType": "YulTypedName", "src": "723:3:1", "type": ""}], "returnVariables": [{"name": "value", "nodeType": "YulTypedName", "src": "731:5:1", "type": ""}], "src": "674:143:1"}, {"body": {"nodeType": "YulBlock", "src": "954:677:1", "statements": [{"body": {"nodeType": "YulBlock", "src": "1000:16:1", "statements": [{"expression": {"arguments": [{"kind": "number", "nodeType": "YulLiteral", "src": "1009:1:1", "type": "", "value": "0"}, {"kind": "number", "nodeType": "YulLiteral", "src": "1012:1:1", "type": "", "value": "0"}], "functionName": {"name": "revert", "nodeType": "YulIdentifier", "src": "1002:6:1"}, "nodeType": "YulFunctionCall", "src": "1002:12:1"}, "nodeType": "YulExpressionStatement", "src": "1002:12:1"}]}, "condition": {"arguments": [{"arguments": [{"name": "dataEnd", "nodeType": "YulIdentifier", "src": "975:7:1"}, {"name": "headStart", "nodeType": "YulIdentifier", "src": "984:9:1"}], "functionName": {"name": "sub", "nodeType": "YulIdentifier", "src": "971:3:1"}, "nodeType": "YulFunctionCall", "src": "971:23:1"}, {"kind": "number", "nodeType": "YulLiteral", "src": "996:2:1", "type": "", "value": "96"}], "functionName": {"name": "slt", "nodeType": "YulIdentifier", "src": "967:3:1"}, "nodeType": "YulFunctionCall", "src": "967:32:1"}, "nodeType": "YulIf", "src": "964:2:1"}, {"nodeType": "YulBlock", "src": "1026:224:1", "statements": [{"nodeType": "YulVariableDeclaration", "src": "1041:38:1", "value": {"arguments": [{"arguments": [{"name": "headStart", "nodeType": "YulIdentifier", "src": "1065:9:1"}, {"kind": "number", "nodeType": "YulLiteral", "src": "1076:1:1", "type": "", "value": "0"}], "functionName": {"name": "add", "nodeType": "YulIdentifier", "src": "1061:3:1"}, "nodeType": "YulFunctionCall", "src": "1061:17:1"}], "functionName": {"name": "mload", "nodeType": "YulIdentifier", "src": "1055:5:1"}, "nodeType": "YulFunctionCall", "src": "1055:24:1"}, "variables": [{"name": "offset", "nodeType": "YulTypedName", "src": "1045:6:1", "type": ""}]}, {"body": {"nodeType": "YulBlock", "src": "1126:16:1", "statements": [{"expression": {"arguments": [{"kind": "number", "nodeType": "YulLiteral", "src": "1135:1:1", "type": "", "value": "0"}, {"kind": "number", "nodeType": "YulLiteral", "src": "1138:1:1", "type": "", "value": "0"}], "functionName": {"name": "revert", "nodeType": "YulIdentifier", "src": "1128:6:1"}, "nodeType": "YulFunctionCall", "src": "1128:12:1"}, "nodeType": "YulExpressionStatement", "src": "1128:12:1"}]}, "condition": {"arguments": [{"name": "offset", "nodeType": "YulIdentifier", "src": "1098:6:1"}, {"kind": "number", "nodeType": "YulLiteral", "src": "1106:18:1", "type": "", "value": "0xffffffffffffffff"}], "functionName": {"name": "gt", "nodeType": "YulIdentifier", "src": "1095:2:1"}, "nodeType": "YulFunctionCall", "src": "1095:30:1"}, "nodeType": "YulIf", "src": "1092:2:1"}, {"nodeType": "YulAssignment", "src": "1156:84:1", "value": {"arguments": [{"arguments": [{"name": "headStart", "nodeType": "YulIdentifier", "src": "1212:9:1"}, {"name": "offset", "nodeType": "YulIdentifier", "src": "1223:6:1"}], "functionName": {"name": "add", "nodeType": "YulIdentifier", "src": "1208:3:1"}, "nodeType": "YulFunctionCall", "src": "1208:22:1"}, {"name": "dataEnd", "nodeType": "YulIdentifier", "src": "1232:7:1"}], "functionName": {"name": "abi_decode_t_string_memory_ptr_fromMemory", "nodeType": "YulIdentifier", "src": "1166:41:1"}, "nodeType": "YulFunctionCall", "src": "1166:74:1"}, "variableNames": [{"name": "value0", "nodeType": "YulIdentifier", "src": "1156:6:1"}]}]}, {"nodeType": "YulBlock", "src": "1260:225:1", "statements": [{"nodeType": "YulVariableDeclaration", "src": "1275:39:1", "value": {"arguments": [{"arguments": [{"name": "headStart", "nodeType": "YulIdentifier", "src": "1299:9:1"}, {"kind": "number", "nodeType": "YulLiteral", "src": "1310:2:1", "type": "", "value": "32"}], "functionName": {"name": "add", "nodeType": "YulIdentifier", "src": "1295:3:1"}, "nodeType": "YulFunctionCall", "src": "1295:18:1"}], "functionName": {"name": "mload", "nodeType": "YulIdentifier", "src": "1289:5:1"}, "nodeType": "YulFunctionCall", "src": "1289:25:1"}, "variables": [{"name": "offset", "nodeType": "YulTypedName", "src": "1279:6:1", "type": ""}]}, {"body": {"nodeType": "YulBlock", "src": "1361:16:1", "statements": [{"expression": {"arguments": [{"kind": "number", "nodeType": "YulLiteral", "src": "1370:1:1", "type": "", "value": "0"}, {"kind": "number", "nodeType": "YulLiteral", "src": "1373:1:1", "type": "", "value": "0"}], "functionName": {"name": "revert", "nodeType": "YulIdentifier", "src": "1363:6:1"}, "nodeType": "YulFunctionCall", "src": "1363:12:1"}, "nodeType": "YulExpressionStatement", "src": "1363:12:1"}]}, "condition": {"arguments": [{"name": "offset", "nodeType": "YulIdentifier", "src": "1333:6:1"}, {"kind": "number", "nodeType": "YulLiteral", "src": "1341:18:1", "type": "", "value": "0xffffffffffffffff"}], "functionName": {"name": "gt", "nodeType": "YulIdentifier", "src": "1330:2:1"}, "nodeType": "YulFunctionCall", "src": "1330:30:1"}, "nodeType": "YulIf", "src": "1327:2:1"}, {"nodeType": "YulAssignment", "src": "1391:84:1", "value": {"arguments": [{"arguments": [{"name": "headStart", "nodeType": "YulIdentifier", "src": "1447:9:1"}, {"name": "offset", "nodeType": "YulIdentifier", "src": "1458:6:1"}], "functionName": {"name": "add", "nodeType": "YulIdentifier", "src": "1443:3:1"}, "nodeType": "YulFunctionCall", "src": "1443:22:1"}, {"name": "dataEnd", "nodeType": "YulIdentifier", "src": "1467:7:1"}], "functionName": {"name": "abi_decode_t_string_memory_ptr_fromMemory", "nodeType": "YulIdentifier", "src": "1401:41:1"}, "nodeType": "YulFunctionCall", "src": "1401:74:1"}, "variableNames": [{"name": "value1", "nodeType": "YulIdentifier", "src": "1391:6:1"}]}]}, {"nodeType": "YulBlock", "src": "1495:129:1", "statements": [{"nodeType": "YulVariableDeclaration", "src": "1510:16:1", "value": {"kind": "number", "nodeType": "YulLiteral", "src": "1524:2:1", "type": "", "value": "64"}, "variables": [{"name": "offset", "nodeType": "YulTypedName", "src": "1514:6:1", "type": ""}]}, {"nodeType": "YulAssignment", "src": "1540:74:1", "value": {"arguments": [{"arguments": [{"name": "headStart", "nodeType": "YulIdentifier", "src": "1586:9:1"}, {"name": "offset", "nodeType": "YulIdentifier", "src": "1597:6:1"}], "functionName": {"name": "add", "nodeType": "YulIdentifier", "src": "1582:3:1"}, "nodeType": "YulFunctionCall", "src": "1582:22:1"}, {"name": "dataEnd", "nodeType": "YulIdentifier", "src": "1606:7:1"}], "functionName": {"name": "abi_decode_t_uint256_fromMemory", "nodeType": "YulIdentifier", "src": "1550:31:1"}, "nodeType": "YulFunctionCall", "src": "1550:64:1"}, "variableNames": [{"name": "value2", "nodeType": "YulIdentifier", "src": "1540:6:1"}]}]}]}, "name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory", "nodeType": "YulFunctionDefinition", "parameters": [{"name": "headStart", "nodeType": "YulTypedName", "src": "908:9:1", "type": ""}, {"name": "dataEnd", "nodeType": "YulTypedName", "src": "919:7:1", "type": ""}], "returnVariables": [{"name": "value0", "nodeType": "YulTypedName", "src": "931:6:1", "type": ""}, {"name": "value1", "nodeType": "YulTypedName", "src": "939:6:1", "type": ""}, {"name": "value2", "nodeType": "YulTypedName", "src": "947:6:1", "type": ""}], "src": "823:808:1"}, {"body": {"nodeType": "YulBlock", "src": "1677:243:1", "statements": [{"nodeType": "YulAssignment", "src": "1687:19:1", "value": {"arguments": [{"kind": "number", "nodeType": "YulLiteral", "src": "1703:2:1", "type": "", "value": "64"}], "functionName": {"name": "mload", "nodeType": "YulIdentifier", "src": "1697:5:1"}, "nodeType": "YulFunctionCall", "src": "1697:9:1"}, "variableNames": [{"name": "memPtr", "nodeType": "YulIdentifier", "src": "1687:6:1"}]}, {"nodeType": "YulVariableDeclaration", "src": "1715:35:1", "value": {"arguments": [{"name": "memPtr", "nodeType": "YulIdentifier", "src": "1737:6:1"}, {"name": "size", "nodeType": "YulIdentifier", "src": "1745:4:1"}], "functionName": {"name": "add", "nodeType": "YulIdentifier", "src": "1733:3:1"}, "nodeType": "YulFunctionCall", "src": "1733:17:1"}, "variables": [{"name": "newFreePtr", "nodeType": "YulTypedName", "src": "1719:10:1", "type": ""}]}, {"body": {"nodeType": "YulBlock", "src": "1861:22:1", "statements": [{"expression": {"arguments": [], "functionName": {"name": "panic_error_0x41", "nodeType": "YulIdentifier", "src": "1863:16:1"}, "nodeType": "YulFunctionCall", "src": "1863:18:1"}, "nodeType": "YulExpressionStatement", "src": "1863:18:1"}]}, "condition": {"arguments": [{"arguments": [{"name": "newFreePtr", "nodeType": "YulIdentifier", "src": "1804:10:1"}, {"kind": "number", "nodeType": "YulLiteral", "src": "1816:18:1", "type": "", "value": "0xffffffffffffffff"}], "functionName": {"name": "gt", "nodeType": "YulIdentifier", "src": "1801:2:1"}, "nodeType": "YulFunctionCall", "src": "1801:34:1"}, {"arguments": [{"name": "newFreePtr", "nodeType": "YulIdentifier", "src": "1840:10:1"}, {"name": "memPtr", "nodeType": "YulIdentifier", "src": "1852:6:1"}], "functionName": {"name": "lt", "nodeType": "YulIdentifier", "src": "1837:2:1"}, "nodeType": "YulFunctionCall", "src": "1837:22:1"}], "functionName": {"name": "or", "nodeType": "YulIdentifier", "src": "1798:2:1"}, "nodeType": "YulFunctionCall", "src": "1798:62:1"}, "nodeType": "YulIf", "src": "1795:2:1"}, {"expression": {"arguments": [{"kind": "number", "nodeType": "YulLiteral", "src": "1899:2:1", "type": "", "value": "64"}, {"name": "newFreePtr", "nodeType": "YulIdentifier", "src": "1903:10:1"}], "functionName": {"name": "mstore", "nodeType": "YulIdentifier", "src": "1892:6:1"}, "nodeType": "YulFunctionCall", "src": "1892:22:1"}, "nodeType": "YulExpressionStatement", "src": "1892:22:1"}]}, "name": "allocateMemory", "nodeType": "YulFunctionDefinition", "parameters": [{"name": "size", "nodeType": "YulTypedName", "src": "1661:4:1", "type": ""}], "returnVariables": [{"name": "memPtr", "nodeType": "YulTypedName", "src": "1670:6:1", "type": ""}], "src": "1637:283:1"}, {"body": {"nodeType": "YulBlock", "src": "1993:265:1", "statements": [{"body": {"nodeType": "YulBlock", "src": "2098:22:1", "statements": [{"expression": {"arguments": [], "functionName": {"name": "panic_error_0x41", "nodeType": "YulIdentifier", "src": "2100:16:1"}, "nodeType": "YulFunctionCall", "src": "2100:18:1"}, "nodeType": "YulExpressionStatement", "src": "2100:18:1"}]}, "condition": {"arguments": [{"name": "length", "nodeType": "YulIdentifier", "src": "2070:6:1"}, {"kind": "number", "nodeType": "YulLiteral", "src": "2078:18:1", "type": "", "value": "0xffffffffffffffff"}], "functionName": {"name": "gt", "nodeType": "YulIdentifier", "src": "2067:2:1"}, "nodeType": "YulFunctionCall", "src": "2067:30:1"}, "nodeType": "YulIf", "src": "2064:2:1"}, {"nodeType": "YulAssignment", "src": "2150:41:1", "value": {"arguments": [{"arguments": [{"name": "length", "nodeType": "YulIdentifier", "src": "2166:6:1"}, {"kind": "number", "nodeType": "YulLiteral", "src": "2174:4:1", "type": "", "value": "0x1f"}], "functionName": {"name": "add", "nodeType": "YulIdentifier", "src": "2162:3:1"}, "nodeType": "YulFunctionCall", "src": "2162:17:1"}, {"arguments": [{"kind": "number", "nodeType": "YulLiteral", "src": "2185:4:1", "type": "", "value": "0x1f"}], "functionName": {"name": "not", "nodeType": "YulIdentifier", "src": "2181:3:1"}, "nodeType": "YulFunctionCall", "src": "2181:9:1"}], "functionName": {"name": "and", "nodeType": "YulIdentifier", "src": "2158:3:1"}, "nodeType": "YulFunctionCall", "src": "2158:33:1"}, "variableNames": [{"name": "size", "nodeType": "YulIdentifier", "src": "2150:4:1"}]}, {"nodeType": "YulAssignment", "src": "2228:23:1", "value": {"arguments": [{"name": "size", "nodeType": "YulIdentifier", "src": "2240:4:1"}, {"kind": "number", "nodeType": "YulLiteral", "src": "2246:4:1", "type": "", "value": "0x20"}], "functionName": {"name": "add", "nodeType": "YulIdentifier", "src": "2236:3:1"}, "nodeType": "YulFunctionCall", "src": "2236:15:1"}, "variableNames": [{"name": "size", "nodeType": "YulIdentifier", "src": "2228:4:1"}]}]}, "name": "array_allocation_size_t_string_memory_ptr", "nodeType": "YulFunctionDefinition", "parameters": [{"name": "length", "nodeType": "YulTypedName", "src": "1977:6:1", "type": ""}], "returnVariables": [{"name": "size", "nodeType": "YulTypedName", "src": "1988:4:1", "type": ""}], "src": "1926:332:1"}, {"body": {"nodeType": "YulBlock", "src": "2309:32:1", "statements": [{"nodeType": "YulAssignment", "src": "2319:16:1", "value": {"name": "value", "nodeType": "YulIdentifier", "src": "2330:5:1"}, "variableNames": [{"name": "cleaned", "nodeType": "YulIdentifier", "src": "2319:7:1"}]}]}, "name": "cleanup_t_uint256", "nodeType": "YulFunctionDefinition", "parameters": [{"name": "value", "nodeType": "YulTypedName", "src": "2291:5:1", "type": ""}], "returnVariables": [{"name": "cleaned", "nodeType": "YulTypedName", "src": "2301:7:1", "type": ""}], "src": "2264:77:1"}, {"body": {"nodeType": "YulBlock", "src": "2396:258:1", "statements": [{"nodeType": "YulVariableDeclaration", "src": "2406:10:1", "value": {"kind": "number", "nodeType": "YulLiteral", "src": "2415:1:1", "type": "", "value": "0"}, "variables": [{"name": "i", "nodeType": "YulTypedName", "src": "2410:1:1", "type": ""}]}, {"body": {"nodeType": "YulBlock", "src": "2475:63:1", "statements": [{"expression": {"arguments": [{"arguments": [{"name": "dst", "nodeType": "YulIdentifier", "src": "2500:3:1"}, {"name": "i", "nodeType": "YulIdentifier", "src": "2505:1:1"}], "functionName": {"name": "add", "nodeType": "YulIdentifier", "src": "2496:3:1"}, "nodeType": "YulFunctionCall", "src": "2496:11:1"}, {"arguments": [{"arguments": [{"name": "src", "nodeType": "YulIdentifier", "src": "2519:3:1"}, {"name": "i", "nodeType": "YulIdentifier", "src": "2524:1:1"}], "functionName": {"name": "add", "nodeType": "YulIdentifier", "src": "2515:3:1"}, "nodeType": "YulFunctionCall", "src": "2515:11:1"}], "functionName": {"name": "mload", "nodeType": "YulIdentifier", "src": "2509:5:1"}, "nodeType": "YulFunctionCall", "src": "2509:18:1"}], "functionName": {"name": "mstore", "nodeType": "YulIdentifier", "src": "2489:6:1"}, "nodeType": "YulFunctionCall", "src": "2489:39:1"}, "nodeType": "YulExpressionStatement", "src": "2489:39:1"}]}, "condition": {"arguments": [{"name": "i", "nodeType": "YulIdentifier", "src": "2436:1:1"}, {"name": "length", "nodeType": "YulIdentifier", "src": "2439:6:1"}], "functionName": {"name": "lt", "nodeType": "YulIdentifier", "src": "2433:2:1"}, "nodeType": "YulFunctionCall", "src": "2433:13:1"}, "nodeType": "YulForLoop", "post": {"nodeType": "YulBlock", "src": "2447:19:1", "statements": [{"nodeType": "YulAssignment", "src": "2449:15:1", "value": {"arguments": [{"name": "i", "nodeType": "YulIdentifier", "src": "2458:1:1"}, {"kind": "number", "nodeType": "YulLiteral", "src": "2461:2:1", "type": "", "value": "32"}], "functionName": {"name": "add", "nodeType": "YulIdentifier", "src": "2454:3:1"}, "nodeType": "YulFunctionCall", "src": "2454:10:1"}, "variableNames": [{"name": "i", "nodeType": "YulIdentifier", "src": "2449:1:1"}]}]}, "pre": {"nodeType": "YulBlock", "src": "2429:3:1", "statements": []}, "src": "2425:113:1"}, {"body": {"nodeType": "YulBlock", "src": "2572:76:1", "statements": [{"expression": {"arguments": [{"arguments": [{"name": "dst", "nodeType": "YulIdentifier", "src": "2622:3:1"}, {"name": "length", "nodeType": "YulIdentifier", "src": "2627:6:1"}], "functionName": {"name": "add", "nodeType": "YulIdentifier", "src": "2618:3:1"}, "nodeType": "YulFunctionCall", "src": "2618:16:1"}, {"kind": "number", "nodeType": "YulLiteral", "src": "2636:1:1", "type": "", "value": "0"}], "functionName": {"name": "mstore", "nodeType": "YulIdentifier", "src": "2611:6:1"}, "nodeType": "YulFunctionCall", "src": "2611:27:1"}, "nodeType": "YulExpressionStatement", "src": "2611:27:1"}]}, "condition": {"arguments": [{"name": "i", "nodeType": "YulIdentifier", "src": "2553:1:1"}, {"name": "length", "nodeType": "YulIdentifier", "src": "2556:6:1"}], "functionName": {"name": "gt", "nodeType": "YulIdentifier", "src": "2550:2:1"}, "nodeType": "YulFunctionCall", "src": "2550:13:1"}, "nodeType": "YulIf", "src": "2547:2:1"}]}, "name": "copy_memory_to_memory", "nodeType": "YulFunctionDefinition", "parameters": [{"name": "src", "nodeType": "YulTypedName", "src": "2378:3:1", "type": ""}, {"name": "dst", "nodeType": "YulTypedName", "src": "2383:3:1", "type": ""}, {"name": "length", "nodeType": "YulTypedName", "src": "2388:6:1", "type": ""}], "src": "2347:307:1"}, {"body": {"nodeType": "YulBlock", "src": "2711:269:1", "statements": [{"nodeType": "YulAssignment", "src": "2721:22:1", "value": {"arguments": [{"name": "data", "nodeType": "YulIdentifier", "src": "2735:4:1"}, {"kind": "number", "nodeType": "YulLiteral", "src": "2741:1:1", "type": "", "value": "2"}], "functionName": {"name": "div", "nodeType": "YulIdentifier", "src": "2731:3:1"}, "nodeType": "YulFunctionCall", "src": "2731:12:1"}, "variableNames": [{"name": "length", "nodeType": "YulIdentifier", "src": "2721:6:1"}]}, {"nodeType": "YulVariableDeclaration", "src": "2752:38:1", "value": {"arguments": [{"name": "data", "nodeType": "YulIdentifier", "src": "2782:4:1"}, {"kind": "number", "nodeType": "YulLiteral", "src": "2788:1:1", "type": "", "value": "1"}], "functionName": {"name": "and", "nodeType": "YulIdentifier", "src": "2778:3:1"}, "nodeType": "YulFunctionCall", "src": "2778:12:1"}, "variables": [{"name": "outOfPlaceEncoding", "nodeType": "YulTypedName", "src": "2756:18:1", "type": ""}]}, {"body": {"nodeType": "YulBlock", "src": "2829:51:1", "statements": [{"nodeType": "YulAssignment", "src": "2843:27:1", "value": {"arguments": [{"name": "length", "nodeType": "YulIdentifier", "src": "2857:6:1"}, {"kind": "number", "nodeType": "YulLiteral", "src": "2865:4:1", "type": "", "value": "0x7f"}], "functionName": {"name": "and", "nodeType": "YulIdentifier", "src": "2853:3:1"}, "nodeType": "YulFunctionCall", "src": "2853:17:1"}, "variableNames": [{"name": "length", "nodeType": "YulIdentifier", "src": "2843:6:1"}]}]}, "condition": {"arguments": [{"name": "outOfPlaceEncoding", "nodeType": "YulIdentifier", "src": "2809:18:1"}], "functionName": {"name": "iszero", "nodeType": "YulIdentifier", "src": "2802:6:1"}, "nodeType": "YulFunctionCall", "src": "2802:26:1"}, "nodeType": "YulIf", "src": "2799:2:1"}, {"body": {"nodeType": "YulBlock", "src": "2932:42:1", "statements": [{"expression": {"arguments": [], "functionName": {"name": "panic_error_0x22", "nodeType": "YulIdentifier", "src": "2946:16:1"}, "nodeType": "YulFunctionCall", "src": "2946:18:1"}, "nodeType": "YulExpressionStatement", "src": "2946:18:1"}]}, "condition": {"arguments": [{"name": "outOfPlaceEncoding", "nodeType": "YulIdentifier", "src": "2896:18:1"}, {"arguments": [{"name": "length", "nodeType": "YulIdentifier", "src": "2919:6:1"}, {"kind": "number", "nodeType": "YulLiteral", "src": "2927:2:1", "type": "", "value": "32"}], "functionName": {"name": "lt", "nodeType": "YulIdentifier", "src": "2916:2:1"}, "nodeType": "YulFunctionCall", "src": "2916:14:1"}], "functionName": {"name": "eq", "nodeType": "YulIdentifier", "src": "2893:2:1"}, "nodeType": "YulFunctionCall", "src": "2893:38:1"}, "nodeType": "YulIf", "src": "2890:2:1"}]}, "name": "extract_byte_array_length", "nodeType": "YulFunctionDefinition", "parameters": [{"name": "data", "nodeType": "YulTypedName", "src": "2695:4:1", "type": ""}], "returnVariables": [{"name": "length", "nodeType": "YulTypedName", "src": "2704:6:1", "type": ""}], "src": "2660:320:1"}, {"body": {"nodeType": "YulBlock", "src": "3014:152:1", "statements": [{"expression": {"arguments": [{"kind": "number", "nodeType": "YulLiteral", "src": "3031:1:1", "type": "", "value": "0"}, {"kind": "number", "nodeType": "YulLiteral", "src": "3034:77:1", "type": "", "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"}], "functionName": {"name": "mstore", "nodeType": "YulIdentifier", "src": "3024:6:1"}, "nodeType": "YulFunctionCall", "src": "3024:88:1"}, "nodeType": "YulExpressionStatement", "src": "3024:88:1"}, {"expression": {"arguments": [{"kind": "number", "nodeType": "YulLiteral", "src": "3128:1:1", "type": "", "value": "4"}, {"kind": "number", "nodeType": "YulLiteral", "src": "3131:4:1", "type": "", "value": "0x22"}], "functionName": {"name": "mstore", "nodeType": "YulIdentifier", "src": "3121:6:1"}, "nodeType": "YulFunctionCall", "src": "3121:15:1"}, "nodeType": "YulExpressionStatement", "src": "3121:15:1"}, {"expression": {"arguments": [{"kind": "number", "nodeType": "YulLiteral", "src": "3152:1:1", "type": "", "value": "0"}, {"kind": "number", "nodeType": "YulLiteral", "src": "3155:4:1", "type": "", "value": "0x24"}], "functionName": {"name": "revert", "nodeType": "YulIdentifier", "src": "3145:6:1"}, "nodeType": "YulFunctionCall", "src": "3145:15:1"}, "nodeType": "YulExpressionStatement", "src": "3145:15:1"}]}, "name": "panic_error_0x22", "nodeType": "YulFunctionDefinition", "src": "2986:180:1"}, {"body": {"nodeType": "YulBlock", "src": "3200:152:1", "statements": [{"expression": {"arguments": [{"kind": "number", "nodeType": "YulLiteral", "src": "3217:1:1", "type": "", "value": "0"}, {"kind": "number", "nodeType": "YulLiteral", "src": "3220:77:1", "type": "", "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"}], "functionName": {"name": "mstore", "nodeType": "YulIdentifier", "src": "3210:6:1"}, "nodeType": "YulFunctionCall", "src": "3210:88:1"}, "nodeType": "YulExpressionStatement", "src": "3210:88:1"}, {"expression": {"arguments": [{"kind": "number", "nodeType": "YulLiteral", "src": "3314:1:1", "type": "", "value": "4"}, {"kind": "number", "nodeType": "YulLiteral", "src": "3317:4:1", "type": "", "value": "0x41"}], "functionName": {"name": "mstore", "nodeType": "YulIdentifier", "src": "3307:6:1"}, "nodeType": "YulFunctionCall", "src": "3307:15:1"}, "nodeType": "YulExpressionStatement", "src": "3307:15:1"}, {"expression": {"arguments": [{"kind": "number", "nodeType": "YulLiteral", "src": "3338:1:1", "type": "", "value": "0"}, {"kind": "number", "nodeType": "YulLiteral", "src": "3341:4:1", "type": "", "value": "0x24"}], "functionName": {"name": "revert", "nodeType": "YulIdentifier", "src": "3331:6:1"}, "nodeType": "YulFunctionCall", "src": "3331:15:1"}, "nodeType": "YulExpressionStatement", "src": "3331:15:1"}]}, "name": "panic_error_0x41", "nodeType": "YulFunctionDefinition", "src": "3172:180:1"}, {"body": {"nodeType": "YulBlock", "src": "3401:79:1", "statements": [{"body": {"nodeType": "YulBlock", "src": "3458:16:1", "statements": [{"expression": {"arguments": [{"kind": "number", "nodeType": "YulLiteral", "src": "3467:1:1", "type": "", "value": "0"}, {"kind": "number", "nodeType": "YulLiteral", "src": "3470:1:1", "type": "", "value": "0"}], "functionName": {"name": "revert", "nodeType": "YulIdentifier", "src": "3460:6:1"}, "nodeType": "YulFunctionCall", "src": "3460:12:1"}, "nodeType": "YulExpressionStatement", "src": "3460:12:1"}]}, "condition": {"arguments": [{"arguments": [{"name": "value", "nodeType": "YulIdentifier", "src": "3424:5:1"}, {"arguments": [{"name": "value", "nodeType": "YulIdentifier", "src": "3449:5:1"}], "functionName": {"name": "cleanup_t_uint256", "nodeType": "YulIdentifier", "src": "3431:17:1"}, "nodeType": "YulFunctionCall", "src": "3431:24:1"}], "functionName": {"name": "eq", "nodeType": "YulIdentifier", "src": "3421:2:1"}, "nodeType": "YulFunctionCall", "src": "3421:35:1"}], "functionName": {"name": "iszero", "nodeType": "YulIdentifier", "src": "3414:6:1"}, "nodeType": "YulFunctionCall", "src": "3414:43:1"}, "nodeType": "YulIf", "src": "3411:2:1"}]}, "name": "validator_revert_t_uint256", "nodeType": "YulFunctionDefinition", "parameters": [{"name": "value", "nodeType": "YulTypedName", "src": "3394:5:1", "type": ""}], "src": "3358:122:1"}]}, "contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocateMemory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocateMemory(size) -> memPtr {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, size)\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        // round up\n        size := and(add(length, 0x1f), not(0x1f))\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n", "id": 1, "language": "Yul", "name": "#utility.yul"}], "linkReferences": {}, "object": "60806040523480156200001157600080fd5b506040516200140038038062001400833981810160405281019062000037919062000239565b82600090805190602001906200004f92919062000100565b5081600190805190602001906200006892919062000100565b5080600281905550600254600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555033600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505062000416565b8280546200010e9062000368565b90600052602060002090601f0160209004810192826200013257600085556200017e565b82601f106200014d57805160ff19168380011785556200017e565b828001600101855582156200017e579182015b828111156200017d57825182559160200191906001019062000160565b5b5090506200018d919062000191565b5090565b5b80821115620001ac57600081600090555060010162000192565b5090565b6000620001c7620001c184620002f5565b620002c1565b905082815260208101848484011115620001e057600080fd5b620001ed84828562000332565b509392505050565b600082601f8301126200020757600080fd5b815162000219848260208601620001b0565b91505092915050565b6000815190506200023381620003fc565b92915050565b6000806000606084860312156200024f57600080fd5b600084015167ffffffffffffffff8111156200026a57600080fd5b6200027886828701620001f5565b935050602084015167ffffffffffffffff8111156200029657600080fd5b620002a486828701620001f5565b9250506040620002b78682870162000222565b9150509250925092565b6000604051905081810181811067ffffffffffffffff82111715620002eb57620002ea620003cd565b5b8060405250919050565b600067ffffffffffffffff821115620003135762000312620003cd565b5b601f19601f8301169050602081019050919050565b6000819050919050565b60005b838110156200035257808201518184015260208101905062000335565b8381111562000362576000848401525b50505050565b600060028204905060018216806200038157607f821691505b602082108114156200039857620003976200039e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620004078162000328565b81146200041357600080fd5b50565b610fda80620004266000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b1461016f57806395d89b411461018d5780639dc29fac146101ab578063a9059cbb146101c7578063fd9bf3aa146101f75761009e565b806306fdde03146100a357806318160ddd146100c15780631eb204bc146100df57806323b872dd1461010f57806370a082311461013f575b600080fd5b6100ab610213565b6040516100b89190610cf6565b60405180910390f35b6100c96102a1565b6040516100d69190610d78565b60405180910390f35b6100f960048036038101906100f49190610a5e565b6102a7565b6040516101069190610d78565b60405180910390f35b61012960048036038101906101249190610a87565b6102f0565b6040516101369190610cdb565b60405180910390f35b61015960048036038101906101549190610a5e565b610490565b6040516101669190610d78565b60405180910390f35b6101776104a8565b6040516101849190610cc0565b60405180910390f35b6101956104ce565b6040516101a29190610cf6565b60405180910390f35b6101c560048036038101906101c09190610b12565b61055c565b005b6101e160048036038101906101dc9190610b12565b61072f565b6040516101ee9190610cdb565b60405180910390f35b610211600480360381019061020c9190610ad6565b6108ce565b005b6000805461022090610ebe565b80601f016020809104026020016040519081016040528092919081815260200182805461024c90610ebe565b80156102995780601f1061026e57610100808354040283529160200191610299565b820191906000526020600020905b81548152906001019060200180831161027c57829003601f168201915b505050505081565b60025481565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115610374576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036b90610d38565b60405180910390fd5b81600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103c39190610e05565b9250508190555081600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104199190610daf565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161047d9190610d78565b60405180910390a3600190509392505050565b60036020528060005260406000206000915090505481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600180546104db90610ebe565b80601f016020809104026020016040519081016040528092919081815260200182805461050790610ebe565b80156105545780601f1061052957610100808354040283529160200191610554565b820191906000526020600020905b81548152906001019060200180831161053757829003601f168201915b505050505081565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e390610d58565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481111561066e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066590610d38565b60405180910390fd5b80600260008282546106809190610e05565b9250508190555080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106d69190610e05565b925050819055508173ffffffffffffffffffffffffffffffffffffffff167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5826040516107239190610d78565b60405180910390a25050565b600081600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156107b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107aa90610d38565b60405180910390fd5b81600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108029190610e05565b9250508190555081600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108589190610daf565b925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516108bc9190610d78565b60405180910390a36001905092915050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461095e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095590610d18565b60405180910390fd5b80600260008282546109709190610daf565b9250508190555080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109c69190610daf565b925050819055508173ffffffffffffffffffffffffffffffffffffffff167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688582604051610a139190610d78565b60405180910390a25050565b600081359050610a2e81610f5f565b92915050565b600081359050610a4381610f76565b92915050565b600081359050610a5881610f8d565b92915050565b600060208284031215610a7057600080fd5b6000610a7e84828501610a1f565b91505092915050565b600080600060608486031215610a9c57600080fd5b6000610aaa86828701610a1f565b9350506020610abb86828701610a1f565b9250506040610acc86828701610a49565b9150509250925092565b60008060408385031215610ae957600080fd5b6000610af785828601610a1f565b9250506020610b0885828601610a34565b9150509250929050565b60008060408385031215610b2557600080fd5b6000610b3385828601610a1f565b9250506020610b4485828601610a49565b9150509250929050565b610b5781610e39565b82525050565b610b6681610e4b565b82525050565b6000610b7782610d93565b610b818185610d9e565b9350610b91818560208601610e8b565b610b9a81610f4e565b840191505092915050565b6000610bb2602283610d9e565b91507f53616d6f20766c61736e696b20736d696a6520646f64617661746920746f6b6560008301527f6e650000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610c18601e83610d9e565b91507f4e65646f766f6c6a6e6f20737265647374617661206e6120726163756e7500006000830152602082019050919050565b6000610c58602383610d9e565b91507f53616d6f20766c61736e696b20736d696a65206f64757a696d61746920746f6b60008301527f656e6500000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b610cba81610e81565b82525050565b6000602082019050610cd56000830184610b4e565b92915050565b6000602082019050610cf06000830184610b5d565b92915050565b60006020820190508181036000830152610d108184610b6c565b905092915050565b60006020820190508181036000830152610d3181610ba5565b9050919050565b60006020820190508181036000830152610d5181610c0b565b9050919050565b60006020820190508181036000830152610d7181610c4b565b9050919050565b6000602082019050610d8d6000830184610cb1565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610dba82610e81565b9150610dc583610e81565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610dfa57610df9610ef0565b5b828201905092915050565b6000610e1082610e81565b9150610e1b83610e81565b925082821015610e2e57610e2d610ef0565b5b828203905092915050565b6000610e4482610e61565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015610ea9578082015181840152602081019050610e8e565b83811115610eb8576000848401525b50505050565b60006002820490506001821680610ed657607f821691505b60208210811415610eea57610ee9610f1f565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b610f6881610e39565b8114610f7357600080fd5b50565b610f7f81610e57565b8114610f8a57600080fd5b50565b610f9681610e81565b8114610fa157600080fd5b5056fea2646970667358221220e762a5737ecd2e1951033d72f1e375ed73e77217d4a2e6101f3e6b04f0fdedeb64736f6c63430008000033", "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1400 CODESIZE SUB DUP1 PUSH3 0x1400 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x239 JUMP JUMPDEST DUP3 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x4F SWAP3 SWAP2 SWAP1 PUSH3 0x100 JUMP JUMPDEST POP DUP2 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x68 SWAP3 SWAP2 SWAP1 PUSH3 0x100 JUMP JUMPDEST POP DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x2 SLOAD PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP PUSH3 0x416 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x10E SWAP1 PUSH3 0x368 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x132 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x17E JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x14D JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x17E JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x17E JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x17D JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x160 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x18D SWAP2 SWAP1 PUSH3 0x191 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x1AC JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x192 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1C7 PUSH3 0x1C1 DUP5 PUSH3 0x2F5 JUMP JUMPDEST PUSH3 0x2C1 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1ED DUP5 DUP3 DUP6 PUSH3 0x332 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH3 0x219 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x1B0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x233 DUP2 PUSH3 0x3FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x278 DUP7 DUP3 DUP8 ADD PUSH3 0x1F5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x2A4 DUP7 DUP3 DUP8 ADD PUSH3 0x1F5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x2B7 DUP7 DUP3 DUP8 ADD PUSH3 0x222 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP DUP2 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x2EB JUMPI PUSH3 0x2EA PUSH3 0x3CD JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x313 JUMPI PUSH3 0x312 PUSH3 0x3CD JUMP JUMPDEST JUMPDEST PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x352 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x335 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x362 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x381 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x398 JUMPI PUSH3 0x397 PUSH3 0x39E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x407 DUP2 PUSH3 0x328 JUMP JUMPDEST DUP2 EQ PUSH3 0x413 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xFDA DUP1 PUSH3 0x426 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0xFD9BF3AA EQ PUSH2 0x1F7 JUMPI PUSH2 0x9E JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x1EB204BC EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x13F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0xCF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9 PUSH2 0x2A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD6 SWAP2 SWAP1 PUSH2 0xD78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF4 SWAP2 SWAP1 PUSH2 0xA5E JUMP JUMPDEST PUSH2 0x2A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x106 SWAP2 SWAP1 PUSH2 0xD78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x129 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x124 SWAP2 SWAP1 PUSH2 0xA87 JUMP JUMPDEST PUSH2 0x2F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x136 SWAP2 SWAP1 PUSH2 0xCDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x154 SWAP2 SWAP1 PUSH2 0xA5E JUMP JUMPDEST PUSH2 0x490 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x166 SWAP2 SWAP1 PUSH2 0xD78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x177 PUSH2 0x4A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x184 SWAP2 SWAP1 PUSH2 0xCC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x195 PUSH2 0x4CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A2 SWAP2 SWAP1 PUSH2 0xCF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0xB12 JUMP JUMPDEST PUSH2 0x55C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0xB12 JUMP JUMPDEST PUSH2 0x72F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0xCDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x211 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20C SWAP2 SWAP1 PUSH2 0xAD6 JUMP JUMPDEST PUSH2 0x8CE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x220 SWAP1 PUSH2 0xEBE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x24C SWAP1 PUSH2 0xEBE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x299 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x26E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x299 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x27C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x374 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x36B SWAP1 PUSH2 0xD38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3C3 SWAP2 SWAP1 PUSH2 0xE05 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x419 SWAP2 SWAP1 PUSH2 0xDAF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x47D SWAP2 SWAP1 PUSH2 0xD78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x4DB SWAP1 PUSH2 0xEBE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x507 SWAP1 PUSH2 0xEBE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x554 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x529 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x554 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x537 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5EC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E3 SWAP1 PUSH2 0xD58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x66E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x665 SWAP1 PUSH2 0xD38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x680 SWAP2 SWAP1 PUSH2 0xE05 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x6D6 SWAP2 SWAP1 PUSH2 0xE05 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 DUP3 PUSH1 0x40 MLOAD PUSH2 0x723 SWAP2 SWAP1 PUSH2 0xD78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x7B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AA SWAP1 PUSH2 0xD38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x802 SWAP2 SWAP1 PUSH2 0xE05 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x858 SWAP2 SWAP1 PUSH2 0xDAF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x8BC SWAP2 SWAP1 PUSH2 0xD78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x95E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x955 SWAP1 PUSH2 0xD18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x970 SWAP2 SWAP1 PUSH2 0xDAF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9C6 SWAP2 SWAP1 PUSH2 0xDAF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885 DUP3 PUSH1 0x40 MLOAD PUSH2 0xA13 SWAP2 SWAP1 PUSH2 0xD78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA2E DUP2 PUSH2 0xF5F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA43 DUP2 PUSH2 0xF76 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA58 DUP2 PUSH2 0xF8D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA7E DUP5 DUP3 DUP6 ADD PUSH2 0xA1F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAAA DUP7 DUP3 DUP8 ADD PUSH2 0xA1F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xABB DUP7 DUP3 DUP8 ADD PUSH2 0xA1F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xACC DUP7 DUP3 DUP8 ADD PUSH2 0xA49 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAF7 DUP6 DUP3 DUP7 ADD PUSH2 0xA1F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB08 DUP6 DUP3 DUP7 ADD PUSH2 0xA34 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB33 DUP6 DUP3 DUP7 ADD PUSH2 0xA1F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB44 DUP6 DUP3 DUP7 ADD PUSH2 0xA49 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xB57 DUP2 PUSH2 0xE39 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xB66 DUP2 PUSH2 0xE4B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB77 DUP3 PUSH2 0xD93 JUMP JUMPDEST PUSH2 0xB81 DUP2 DUP6 PUSH2 0xD9E JUMP JUMPDEST SWAP4 POP PUSH2 0xB91 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xE8B JUMP JUMPDEST PUSH2 0xB9A DUP2 PUSH2 0xF4E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB2 PUSH1 0x22 DUP4 PUSH2 0xD9E JUMP JUMPDEST SWAP2 POP PUSH32 0x53616D6F20766C61736E696B20736D696A6520646F64617661746920746F6B65 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6E65000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC18 PUSH1 0x1E DUP4 PUSH2 0xD9E JUMP JUMPDEST SWAP2 POP PUSH32 0x4E65646F766F6C6A6E6F20737265647374617661206E6120726163756E750000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC58 PUSH1 0x23 DUP4 PUSH2 0xD9E JUMP JUMPDEST SWAP2 POP PUSH32 0x53616D6F20766C61736E696B20736D696A65206F64757A696D61746920746F6B PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x656E650000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCBA DUP2 PUSH2 0xE81 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCD5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB4E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCF0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB5D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD10 DUP2 DUP5 PUSH2 0xB6C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD31 DUP2 PUSH2 0xBA5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD51 DUP2 PUSH2 0xC0B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD71 DUP2 PUSH2 0xC4B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD8D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCB1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDBA DUP3 PUSH2 0xE81 JUMP JUMPDEST SWAP2 POP PUSH2 0xDC5 DUP4 PUSH2 0xE81 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xDFA JUMPI PUSH2 0xDF9 PUSH2 0xEF0 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE10 DUP3 PUSH2 0xE81 JUMP JUMPDEST SWAP2 POP PUSH2 0xE1B DUP4 PUSH2 0xE81 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0xE2E JUMPI PUSH2 0xE2D PUSH2 0xEF0 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE44 DUP3 PUSH2 0xE61 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xEA9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xE8E JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xEB8 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xED6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xEEA JUMPI PUSH2 0xEE9 PUSH2 0xF1F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF68 DUP2 PUSH2 0xE39 JUMP JUMPDEST DUP2 EQ PUSH2 0xF73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xF7F DUP2 PUSH2 0xE57 JUMP JUMPDEST DUP2 EQ PUSH2 0xF8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xF96 DUP2 PUSH2 0xE81 JUMP JUMPDEST DUP2 EQ PUSH2 0xFA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 PUSH3 0xA5737E 0xCD 0x2E NOT MLOAD SUB RETURNDATASIZE PUSH19 0xF1E375ED73E77217D4A2E6101F3E6B04F0FDED 0xEB PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ", "sourceMap": "58:2012:0:-:0;;;444:242;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;539:5;532:4;:12;;;;;;;;;;;;:::i;:::-;;563:7;554:6;:16;;;;;;;;;;;;:::i;:::-;;594:12;580:11;:26;;;;640:11;;616:9;:21;626:10;616:21;;;;;;;;;;;;;;;:35;;;;669:10;661:5;;:18;;;;;;;;;;;;;;;;;;444:242;;;58:2012;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:353:1:-;;121:65;136:49;178:6;136:49;:::i;:::-;121:65;:::i;:::-;112:74;;209:6;202:5;195:21;247:4;240:5;236:16;285:3;276:6;271:3;267:16;264:25;261:2;;;302:1;299;292:12;261:2;315:39;347:6;342:3;337;315:39;:::i;:::-;102:258;;;;;;:::o;380:288::-;;496:3;489:4;481:6;477:17;473:27;463:2;;514:1;511;504:12;463:2;547:6;541:13;572:90;658:3;650:6;643:4;635:6;631:17;572:90;:::i;:::-;563:99;;453:215;;;;;:::o;674:143::-;;762:6;756:13;747:22;;778:33;805:5;778:33;:::i;:::-;737:80;;;;:::o;823:808::-;;;;996:2;984:9;975:7;971:23;967:32;964:2;;;1012:1;1009;1002:12;964:2;1076:1;1065:9;1061:17;1055:24;1106:18;1098:6;1095:30;1092:2;;;1138:1;1135;1128:12;1092:2;1166:74;1232:7;1223:6;1212:9;1208:22;1166:74;:::i;:::-;1156:84;;1026:224;1310:2;1299:9;1295:18;1289:25;1341:18;1333:6;1330:30;1327:2;;;1373:1;1370;1363:12;1327:2;1401:74;1467:7;1458:6;1447:9;1443:22;1401:74;:::i;:::-;1391:84;;1260:225;1524:2;1550:64;1606:7;1597:6;1586:9;1582:22;1550:64;:::i;:::-;1540:74;;1495:129;954:677;;;;;:::o;1637:283::-;;1703:2;1697:9;1687:19;;1745:4;1737:6;1733:17;1852:6;1840:10;1837:22;1816:18;1804:10;1801:34;1798:62;1795:2;;;1863:18;;:::i;:::-;1795:2;1903:10;1899:2;1892:22;1677:243;;;;:::o;1926:332::-;;2078:18;2070:6;2067:30;2064:2;;;2100:18;;:::i;:::-;2064:2;2185:4;2181:9;2174:4;2166:6;2162:17;2158:33;2150:41;;2246:4;2240;2236:15;2228:23;;1993:265;;;:::o;2264:77::-;;2330:5;2319:16;;2309:32;;;:::o;2347:307::-;2415:1;2425:113;2439:6;2436:1;2433:13;2425:113;;;2524:1;2519:3;2515:11;2509:18;2505:1;2500:3;2496:11;2489:39;2461:2;2458:1;2454:10;2449:15;;2425:113;;;2556:6;2553:1;2550:13;2547:2;;;2636:1;2627:6;2622:3;2618:16;2611:27;2547:2;2396:258;;;;:::o;2660:320::-;;2741:1;2735:4;2731:12;2721:22;;2788:1;2782:4;2778:12;2809:18;2799:2;;2865:4;2857:6;2853:17;2843:27;;2799:2;2927;2919:6;2916:14;2896:18;2893:38;2890:2;;;2946:18;;:::i;:::-;2890:2;2711:269;;;;:::o;2986:180::-;3034:77;3031:1;3024:88;3131:4;3128:1;3121:15;3155:4;3152:1;3145:15;3172:180;3220:77;3217:1;3210:88;3317:4;3314:1;3307:15;3341:4;3338:1;3331:15;3358:122;3431:24;3449:5;3431:24;:::i;:::-;3424:5;3421:35;3411:2;;3470:1;3467;3460:12;3411:2;3401:79;:::o;58:2012:0:-;;;;;;;"}}, "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_totalSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"ballanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"_amount\",\"type\":\"int256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SimpleStorage.sol\":\"SimpleStorage\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"SimpleStorage.sol\":{\"keccak256\":\"0xd069318beaa9e9c1a12e7ec6624ad895d7ac18d2e1c2a8781c7e3aa991e00db5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38975c9511d7dee07ff2fad2849c0ff68b0d05d89342e91364eff62ddbdc192e\",\"dweb:/ipfs/QmP8xuj2A2WGnhA7R8spJ5WTQdD7Kaf45vVbCvNsYvERUv\"]}},\"version\":1}"}}}, "sources": {"SimpleStorage.sol": {"id": 0}}}